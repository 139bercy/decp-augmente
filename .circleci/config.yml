---
version: 2
jobs:
  install_requirements:
    docker:
      - image: 139bercy/decp-rama
    resource_class: large
    steps:
      - checkout
      - restore_cache:
          keys:
            - dependencies2-{{ .Branch }}-{{ checksum "requirements.txt"}}
      - run:
          name: Installation des requirements
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt
      - save_cache:
          key: dependencies2-{{ .Branch }}-{{ checksum "requirements.txt"}}
          paths:
            - "venv"

  linter:
    docker:
      - image: 139bercy/decp-rama
    resource_class: large
    steps:
      - checkout
      - restore_cache:
          keys:
            - dependencies2-{{ .Branch }}-{{ checksum "requirements.txt"}}
      - run:
          name: Linter
          command: |
            . venv/bin/activate
            pip install pylint
            PYTHON_FILE="$(ls *.py)"
            pylint $PYTHON_FILE

  gestion_flux:
      docker:
          - image: 139bercy/decp-rama
      resource_class: large
      steps:
        - checkout
        - restore_cache:
            keys:
              - dependencies2-{{ .Branch }}-{{ checksum "requirements.txt"}}
              - dependencies2
        - run:
            name: Gestion des flux
            command: |
                . venv/bin/activate
                python3 gestion_flux.py
  update_file:
      docker:
          - image: 139bercy/decp-rama
      resource_class: large
      steps:
        - checkout
        - restore_cache:
            keys:
              - dependencies2-{{ .Branch }}-{{ checksum "requirements.txt"}}
              - dependencies2
        - run:
            name: Upload des fichiers modifiés sur Saagie
            command: |
              . venv/bin/activate
              python3 update_jobs_for_new_files.py
  nettoyage_flux:
      docker:
          - image: 139bercy/decp-rama
      resource_class: large
      steps:
        - checkout
        - restore_cache:
            keys:
              - dependencies2-{{ .Branch }}-{{ checksum "requirements.txt"}}
              - dependencies2
        - run:
            name: Nettoyage flux
            no_output_timeout: 40m
            command: |
                . venv/bin/activate
                python3 nettoyage.py
  enrichissement_flux:
      docker:
          - image: 139bercy/decp-rama
      resource_class: large
      steps:
        - checkout
        - restore_cache:
            keys:
              - dependencies2-{{ .Branch }}-{{ checksum "requirements.txt"}}
              - dependencies2
        - run:
            name: Enrichissement flux
            no_output_timeout: 40m
            command: |
                . venv/bin/activate
                python3 enrichissement.py

  send:
    docker:
      - image: 139bercy/decp-rama
    resource_class: large
    steps:
      - checkout
      - run: date +%F > date
      - restore_cache:
          keys:
            - data-out-{{ .Branch }}-{{ checksum "date" }}
      - run:
          name: Condition pour les branches
          command: |
            if [ "$CIRCLE_BRANCH" != "master" ]; then
                circleci-agent step halt
            fi
      - run:
          name: Transfert des données vers data.economie
          command: |
            lftp -u ${DEPLOY_USER}:${DEPLOY_PASSWORD} ${DEPLOY_HOST} -e "set ftp:ssl-force true ; set ssl:verify-certificate false; cd decp ; put decp_augmente.csv ; quit"

  
  do_pytest:
    docker:
      - image: 139bercy/decp-rama
    resource_class: large
    steps:
      - checkout
      - restore_cache:
          keys:
            - dependencies2-{{ .Branch }}-{{ checksum "requirements.txt"}}
      - run:
          name: Pytest tests
          command: | 
            . venv/bin/activate
            pytest
  
  
  compute_test:
    docker:
      - image: 139bercy/decp-rama
    resource_class: large
    steps:
      - checkout
      - restore_cache:
            keys:
              - dependencies2-{{ .Branch }}-{{ checksum "requirements.txt"}}
      - run:
          name: Main_test
          command: |
              . venv/bin/activate
              python3 main.py -t True


workflows:
  version: 2
  main:
    jobs:
      - install_requirements
