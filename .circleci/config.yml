---
version: 2
jobs:
  install_requirements:
    docker:
      - image: 139bercy/decp-rama
    steps:
      - checkout
      - restore_cache:
          keys:
            - dependencies-{{ .Branch }}-{{ checksum "requirements.txt"}}-{{ checksum "config-circleci.json"}}
            - dependencies-master-{{ checksum "requirements.txt"}}
      - run: mv config-circleci.json config.json
      - run:
          name: Installation des requirements
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt
      - save_cache:
          key: dependencies-{{ .Branch }}-{{ checksum "requirements.txt"}}-{{ checksum "config-circleci.json"}}
          paths:
            - "venv"
            - "config.json"

  linter:
    docker:
      - image: 139bercy/decp-rama
    steps:
      - checkout
      - restore_cache:
          keys:
            - dependencies-{{ .Branch }}-{{ checksum "requirements.txt"}}-{{ checksum "config-circleci.json"}}
      - run:
          name: Linter
          command: |
            . venv/bin/activate
            pip install pylint
            PYTHON_FILE="$(ls *.py)"
            pylint $PYTHON_FILE

  get_data:
      docker:
        - image: 139bercy/decp-rama
      steps:
        - run: date +%F > date
        - run:
            name: Récupération des données utiles
            no_output_timeout: 1h
            command: |
              mkdir data && cd data
              wget 'https://public.opendatasoft.com/explore/dataset/geoflar-communes-2015/download/?format=csv&timezone=Europe/Berlin&lang=fr&use_labels_for_header=true&csv_separator=%3B' -O geoflar-communes-2015.csv
              #wget 'https://public.opendatasoft.com/explore/dataset/code-insee-postaux-geoflar/download/?format=csv&timezone=Europe/Berlin&lang=fr&use_labels_for_header=true&csv_separator=%3B' -O code-insee-postaux-geoflar.csv
              wget https://simap.ted.europa.eu/documents/10184/36234/cpv_2008_xls.zip
              unzip cpv_2008_xls.zip
              wget https://www.insee.fr/fr/statistiques/fichier/4316069/departement2020-csv.zip
              unzip departement2020-csv.zip
              wget https://www.insee.fr/fr/statistiques/fichier/4316069/region2020-csv.zip
              unzip region2020-csv.zip
              wget https://files.data.gouv.fr/insee-sirene/StockEtablissement_utf8.zip
              unzip StockEtablissement_utf8.zip
              wget https://static.data.gouv.fr/resources/base-sirene-des-entreprises-et-de-leurs-etablissements-siren-siret/20210301/StockUniteLegale_utf8.zip
              unzip StockUniteLegale_utf8.zip
              wget https://www.data.gouv.fr/fr/datasets/r/16962018-5c31-4296-9454-5998585496d2 -O decp.json
              ls
        - save_cache:
           key: data-input-{{ checksum "date" }}
           paths:
             - "data"

  compute:
    docker:
      - image: 139bercy/decp-rama
    steps:
      - checkout
      - restore_cache:
          keys:
            - dependencies-{{ .Branch }}-{{ checksum "requirements.txt"}}-{{ checksum "config-circleci.json"}}
            - dependencies
      - run: date +%F > date
      - restore_cache:
          keys:
            - data-input-{{ checksum "date" }}
      - run:
          name: Traitement des données
          no_output_timeout: 2h
          command: |
            . venv/bin/activate
            python main.py
      - save_cache:
         key: data-out-{{ .Branch }}-{{ checksum "date" }}
         paths:
           - "decp_nettoye.csv"
           - "decp_augmente.csv"

  send:
    docker:
      - image: 139bercy/decp-rama
    steps:
      - checkout
      - run: date +%F > date
      - restore_cache:
          keys:
            - data-out-{{ .Branch }}-{{ checksum "date" }}
      - run:
          name: Transfert des données vers data.economie
          command: |
            lftp -u ${DEPLOY_USER}:${DEPLOY_PASSWORD} ${DEPLOY_HOST} -e "set ftp:ssl-force true ; cd decp ; put decp_nettoye.csv decp_augmente.csv ; quit"

workflows:
  version: 2
  main:
    jobs:
      - install_requirements
      - compute:
          requires:
            - install_requirements

  daily-prod:
    jobs:
      - install_requirements
      - get_data
      - compute:
          requires:
            - install_requirements
            - get_data
      - send:
          requires:
            - compute
    triggers:
      - schedule:
          cron: 0 6 * * 2,3,4,5,6
          filters:
            branches:
              only:
                - master
